#!/usr/bin/bash
#
#FUNCTION for install.sh

#base prepare
func_base_prepare(){
       # sh version.sh
	fab -H $master,$node -f fab_inst.py prepare -u $REMOTE_USER -P --colorize-errors
}

#ha prepare
func_ha_prepare(){
	fab -H $master,$node -f fab_inst.py prepare_ha -u $REMOTE_USER -P --colorize-errors
}

#addon prepare
func_addon_prepare(){
( [ $ingress = true ] || [ $helm = true ] || [ $prometheus = true ] || [ $efk = true ] ) && \
fab -H $master,$node -f fab_inst.py addon -u $REMOTE_USER -P --colorize-errors 
}

#istio prepare
func_istio_prepare(){
[ $istio = true ] && \
fab -H $master,$node -f fab_inst.py istio_prepare -u $REMOTE_USER -P --colorize-errors 
}

#keepalived
func_keepalived(){
	fab -H $master -f fab_inst.py keepalived -u $REMOTE_USER -P --colorize-errors
}

#haproxy
func_haproxy(){
	fab -H $master -f fab_inst.py haproxy -u $REMOTE_USER -P --colorize-errors
}

#etcd
func_etcd(){
	fab -H $master -f fab_inst.py etcd -u $REMOTE_USER -P --colorize-errors
}

#master
func_master(){
        fab -H $master -f fab_inst.py master -u $REMOTE_USER --colorize-errors |tee log
}

#master1
func_master1(){
	fab -H $CP1_IP -f fab_inst.py master1 -u $REMOTE_USER --colorize-errors |tee log
#	scp core@$CP1_IP:coreos-k8s/master-conf.tgz . 
}

#master2
func_master2(){
	fab -H $CP2_IP,$CP3_IP -f fab_inst.py master2 -u $REMOTE_USER  --colorize-errors |tee -a log
#	fab -H $CP3_IP -f fab_inst.py master2 -u $REMOTE_USER  --colorize-errors |tee -a log
}

#network
func_network(){
[ $net = "calico" ] && echo "install calico" && \
fab -H $CP1_IP -f fab_inst.py calico -u $REMOTE_USER --colorize-errors 
[ $net = "flannel" ] && echo "install flannel" && \
fab -H $CP1_IP -f fab_inst.py flannel -u $REMOTE_USER --colorize-errors 
}

#find join command
func_nodejoin(){
#cat log |grep kubeadm|grep join |tail -1 |awk -F'out:' '{print "sudo -i "$2}' >join.sh
fab -H $node -f fab_inst.py node -u $REMOTE_USER -P --colorize-errors 
}

#node rejoin
func_noderejoin(){
fab -H $CP1_IP -f fab_inst.py rejoin -u $REMOTE_USER --colorize-errors |tee rejoin
cat rejoin |grep kubeadm|grep join |awk -F'out:' '{print "sudo -i "$2}' >join.sh
fab -H $node -f fab_inst.py node -u $REMOTE_USER -P --colorize-errors 
}

#dashboard
func_dashboard(){
[ $dashboard = true ] && echo "install dashboard" && \
fab -H $CP1_IP -f fab_inst.py dashboard -u $REMOTE_USER --colorize-errors|tee -a log 
}

#ingress
func_ingress(){
[ $ingress = true ] && echo "install ingress" && \
fab -H $CP1_IP -f fab_inst.py ingress -u $REMOTE_USER --colorize-errors 
}

#helm
func_helm(){
[ $helm = true ] && echo "install helm" && \
fab -H $CP1_IP -f fab_inst.py helm -u $REMOTE_USER --colorize-errors
}

#prometheus
func_prometheus(){
[ $prometheus = true ] && echo "install prometheus" && \
fab -H $CP1_IP -f fab_inst.py prometheus -u $REMOTE_USER --colorize-errors
}

#efk
func_efk(){
[ $efk = true ] && echo "install efk" && \
fab -H $CP1_IP -f fab_inst.py efk -u $REMOTE_USER --colorize-errors
}

#istio
func_istio(){
[ $istio = true ] && echo "install istio" && \
fab -H $CP1_IP -f fab_inst.py istio -u $REMOTE_USER --colorize-errors
}

#reset
func_reset(){
	fab -H $master,$node -f fab_inst.py reset -u $REMOTE_USER -P --colorize-errors |tee -a log
}

#finish 
func_finish(){
  fab -H $CP1_IP -f fab_inst.py finish -u $REMOTE_USER --colorize-errors |tee finish 
  str="\n"`cat README.md |tail -6|head -n -1|sed 's/#/ /g'`"\n\n"
  str+=`cat finish|sed -n -e '/Version/ p' -e '/get svc/,/^$/ p' -e '/token:  / p'|awk -F'out:' '{print $2}'`
  echo -e "\033[45;42m $str \033[0m"
}

#get svc
func_getsvc(){
  fab -H $VIP_IP -f fab_inst.py getsvc -u $REMOTE_USER --colorize-errors  
}

#gen index:  svc.html
func_genindex(){
  fab -H $CP1_IP -f fab_inst.py getsvc -u $REMOTE_USER --colorize-errors|awk -F'out:' '{print $2}'|\
grep -vP "None|dns|^$"|head -n -1|\
awk '{print $2"\t"$4"\t"$6}'|\
sed -e 's/:/ :/g' -e "s#/TCP##g"|\
awk 'NR==1{print "<h1>SVC simple index</h1>\
(add route first by: <b>route add  10.0.0.0 mask 255.0.0.0 [your any nodeIP]</b>)</br></br>"}\
NR>1{print "<li>"$0"\t\t\t\t<a href=\"http://"$2":"$3"\">http://"$1"</a>\
\t<a href=\"https://"$2":"$3"\">https://"$1"</a></li></br>"}'\
 > svc.html  
}

#etcdcheck
func_etcdcheck(){
	fab -H $VIP_IP -f fab_inst.py etcdcheck -u $REMOTE_USER --colorize-errors |tee check
}

#reboot
func_reboot(){
	fab -H $master,$node -f fab_inst.py reboot -u $REMOTE_USER -P --colorize-errors
}

#getpods
func_getpods(){
	fab -H $VIP_IP -f fab_inst.py getpods -u $REMOTE_USER  --colorize-errors|tee runpods
        PodsRun=`cat runpods|grep Running|wc -l`
}

#calico check
func_calicocheck(){
	fab -H $VIP_IP -f fab_inst.py calicocheck -u $REMOTE_USER  --colorize-errors|tee -a check
}

#cluster info
func_clusterinfo(){
	fab -H $VIP_IP -f fab_inst.py clusterinfo -u $REMOTE_USER  --colorize-errors|tee -a check
}

#timezone8
func_timezone8(){
	fab -H $master,$node -f fab_inst.py timezone8 -u $REMOTE_USER  --colorize-errors
}

#route
func_route(){
	fab -H $master,$node -f fab_inst.py route -u $REMOTE_USER  --colorize-errors
}


#END.
